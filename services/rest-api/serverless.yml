service: ${self:custom.appName}-restapi

provider:
    name: aws
    region: ${file(../../common/infra/provider-settings.yml):region}
    runtime: ${file(../../common/infra/provider-settings.yml):runtime}
    stage: ${file(../../common/infra/provider-settings.yml):stage}
    logRetentionInDays: ${file(../../common/infra/provider-settings.yml):logRetentionInDays}
    httpApi:
        authorizers:
            cognitoJwtAuthorizer:
                identitySource: $request.header.Authorization
                issuerUrl: https://cognito-idp.${self:provider.region}.amazonaws.com/${cf:${self:custom.infraStack}.UserPoolId}
                audience:
                - ${cf:${self:custom.infraStack}.UserPoolClientId}
    environment:
        STAGE: ${self:provider.stage}
        REGION: ${self:provider.region}
        API_GW_DOMAIN: !Ref HttpApi
        COGNITO_USER_POOL_ID: ${cf:${self:custom.infraStack}.UserPoolId}
        COGNITO_USER_POOL_CLIENT_ID: ${cf:${self:custom.infraStack}.UserPoolClientId}
        DDB_TABLE_CLUBS: ${cf:${self:custom.infraStack}.DDBTableClubs}
        DDB_TABLE_MEMBERS: ${cf:${self:custom.infraStack}.DDBTableMembers}

custom:
    appName: ${file(../../common/infra/provider-settings.yml):appName}
    infraStack: ${self:custom.appName}-infra-${self:provider.stage}
    awsAccountId: ${cf:${self:custom.infraStack}.AWSAccountId}
    webpack:
        includeModules: false
    defaultApiAuthorizer:
        name: cognitoJwtAuthorizer

package:
    individually: true

functions:

    # =================================================================
    # API Gateway handlers
    # =================================================================

    # === /clubs
    httpClubsGet:
        handler: src/handlers/http/clubs/index.get
        events:
        -   httpApi:
                path: /clubs
                method: GET
        iamRoleStatements:
        -   Effect: Allow
            Action:
                - dynamodb:Query
            Resource:
                - arn:aws:dynamodb:${self:provider.region}:${self:custom.awsAccountId}:table/${cf:${self:custom.infraStack}.DDBTableClubs}*

# resources:

plugins:
- serverless-webpack
- serverless-export-env
- serverless-iam-roles-per-function
