# Stack containing core shared infrastructure resources.
service: ${self:custom.appName}-infra

provider:
    name: aws
    region: eu-west-1
    runtime: nodejs12.x
    stage: ${opt:stage,'dev'}
    logRetentionInDays: 30
    environment:
        STAGE: ${self:provider.stage}
    stackPolicy:
    -   Effect: Allow
        Principal: '*'
        Action: 'Update:*'
        Resource: '*'
    # Prevent CloudFormation from replacing or deleting DynamoDB tables
    -   Effect: Deny
        Principal: '*'
        Resource: '*'
        Condition:
            StringEquals:
                ResourceType:
                    - AWS::DynamoDB::Table
        Action:
            - Update:Replace

custom:
    appName: TestingWorkshop
    dynamoDbTablePrefix: ${self:custom.appName}-${self:provider.stage}
    snsTopicPrefix: ${self:custom.appName}-${self:provider.stage}
    deletionPolicy:
        personal: Delete
        dev: Delete
        prod: Retain

resources:
    - ${file(resources/s3-cloudfront.yml)}
    - ${file(resources/dynamodb-tables.yml)}
    - ${file(resources/eventbridge-resources.yml)}
    - ${file(resources/cognito-resources.yml)}
    - ${file(resources/sqs-resources.yml)}
    - Outputs:
        AWSAccountId:
            Value: !Ref 'AWS::AccountId'
        DynamoDBTablePrefix:
            Value: ${self:custom.dynamoDbTablePrefix}
        SNSTopicPrefix:
            Value: ${self:custom.snsTopicPrefix}

functions:

plugins:
- serverless-export-env
